install.packages("blogdown")
library(blogdown)
install_hugo()
quit()
install_hugo()
library(blogdown)
install_hugo()
blogdown::new_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
library(blogdown)
blogdown::new_site()
library(blogdown)
install_hugo()
library(blogdown)
blogdown::new_site()
blogdown:::serve_site()
getwd()
load("data/ws_maps2")
getwd()
blogdown:::new_post_addin()
getwd()
load("ws_maps2")
load("data/ws_maps2")
library(tmap) # graficar objetos de poligonos espaciales
library(rgdal) # lectura de objetos "spatialpolygonsdataframe"
library(tidyverse) # visualización y manipulación de datos
library(xlsx) # leer archivos de excel
library(tmap) # graficar objetos de poligonos espaciales
library(rgdal) # lectura de objetos "spatialpolygonsdataframe"
library(tidyverse) # visualización y manipulación de datos
#library(xlsx) # leer archivos de excel
library(kableExtra) #Tablas de
library(leaflet) #mapas interactivos
library(raster)
library(gridExtra)
library(janitor)
library(sf)
library(viridis)
library(GISTools) # to count points in polygon
blogdown:::serve_site()
blogdown:::new_post_addin()
rm(list = ls())
blogdown::serve_site()
blogdown::serve_site()
blogdown:::new_post_addin()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
getwd
getwd()
load("data/webcraping_oil/notebook_webscraping_ws")
blogdown:::serve_site()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::insert_image_addin()
blogdown:::serve_site()
servr::daemon_stop(2)
blogdown:::serve_site()
blogdown:::insert_image_addin()
blogdown:::serve_site()
blogdown:::insert_image_addin()
blogdown:::serve_site()
servr::daemon_stop(1)
blogdown:::serve_site()
servr::daemon_stop(2)
blogdown:::serve_site()
servr::daemon_stop(3)
blogdown:::serve_site()
servr::daemon_stop(4)
blogdown:::serve_site()
servr::daemon_stop(1)
blogdown:::serve_site()
servr::daemon_stop(1)
blogdown:::serve_site()
servr::daemon_stop(3)
blogdown:::serve_site()
servr::daemon_stop(4)
blogdown:::serve_site()
servr::daemon_stop(5)
blogdown:::new_post_addin()
rm(list = ls())
library(sf)
library(tidyverse)
library(ggrepel)
library(scales)
library(sf)
library(tidyverse)
library(ggrepel)
library(scales)
getwd()
getwd("/data/puerto_plata_maps/mapas_pp_ws")
load("/data/puerto_plata_maps/mapas_pp_ws")
load("data/puerto_plata_maps/mapas_pp_ws")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
servr::daemon_stop(1)
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
servr::daemon_stop(1)
for(i in 1:10) {
i ** 2
}
for(i in 1:10) {
print(i ** 2)
}
numeric(10)
sapply(df, median)
df <- mtcars[c("mpg", "wt", "qsec", "hp")]
sapply(df, median)
mediana[i] <- median(df[[u]])
mediana <- ncol(df)
for(i in seq_along(df)) {
mediana[i] <- median(df[[u]])
}
mediana <- ncol(df)
for(i in seq_along(df)) {
mediana[i] <- median(df[[i]])
}
mediana
blogdown::serve_site()
servr::daemon_stop(1)
rm(list = ls())
blogdown:::new_post_addin()
getwd()
load("data/forecasting_tidyverts/forecasting_ws")
install.packages("tidyverts")
install.packages("tsibble")
install.packages("fable")
install.packages("fable", repos = "https://tidyverts.org/")
library(tidyverse)
theme_plex <- function(base_size = 11,
strip_text_size = 12,
strip_text_margin = 5,
subtitle_size = 13,
subtitle_margin = 10,
plot_title_size = 16,
plot_title_margin = 10,
...)
{
ret <- ggplot2::theme_minimal(base_family = "IBMPlexSans",
base_size = base_size, ...)
ret$strip.text <- ggplot2::element_text(hjust = 0, size=strip_text_size,
margin=margin(b=strip_text_margin),
family="IBMPlexSans-Medium")
ret$plot.subtitle <- ggplot2::element_text(hjust = 0, size=subtitle_size,
margin=margin(b=subtitle_margin),
family="IBMPlexSans")
ret$plot.title <- ggplot2::element_text(hjust = 0, size = plot_title_size,
margin=margin(b=plot_title_margin),
family="IBMPlexSans-Bold")
ret
}
load("data/forecasting_tidyverts/forecasting_ws")
theme_plex <- function(base_size = 11,
strip_text_size = 12,
strip_text_margin = 5,
subtitle_size = 13,
subtitle_margin = 10,
plot_title_size = 16,
plot_title_margin = 10,
...)
{
ret <- ggplot2::theme_minimal(base_family = "IBMPlexSans",
base_size = base_size, ...)
ret$strip.text <- ggplot2::element_text(hjust = 0, size=strip_text_size,
margin=margin(b=strip_text_margin),
family="IBMPlexSans-Medium")
ret$plot.subtitle <- ggplot2::element_text(hjust = 0, size=subtitle_size,
margin=margin(b=subtitle_margin),
family="IBMPlexSans")
ret$plot.title <- ggplot2::element_text(hjust = 0, size = plot_title_size,
margin=margin(b=plot_title_margin),
family="IBMPlexSans-Bold")
ret
}
theme_set(theme_plex())
blogdown:::serve_site()
servr::daemon_stop(2)
blogdown:::serve_site()
servr::daemon_stop(3)
blogdown:::serve_site()
servr::daemon_stop(4)
rm(list = ls())
blogdown:::new_post_addin()
load("data/defunciones_generales/defunciones_generales_ws")
source("data/defunciones_generales/themes.R")
install.packages("pachwork")
install.packages(patchwork)
install.packages("patchwork")
p <- defunciones %>%
group_by(ano_def) %>%
count(edad_fal, sexo) %>%
filter(edad_fal < 99, sexo != 9, ano_def %in% 2001:2019) %>%
ggplot(aes(x = edad_fal, y = n, group = ano_def, col = ano_def)) +
geom_line() +
xlab("Edad") +
ylab("Logaritmo de las defunciones") +
facet_grid(~sexo) +
scale_y_log10() +
scale_color_gradientn(colours = rainbow(10)) +
transition_time(ano_def) +
ease_aes('linear') +
shadow_mark(colour = "grey70") +
labs(title = 'Year: {as.integer(frame_time)}')
blogdown:::serve_site()
servr::daemon_stop(1)
blogdown:::serve_site()
servr::daemon_stop(2)
blogdown:::serve_site()
servr::daemon_stop(3)
load("data/defunciones_generales/defunciones_generales_ws")
source("data/defunciones_generales/themes.R")
defunciones %>%
filter(edad_fal < 99, sexo != 9, ano_def %in% 2001:2019) %>%
ggplot(aes(x = edad_fal, col = ano_def, group = ano_def)) +
stat_ecdf() +
facet_wrap(~sexo)
# manipulación y visualización de datos
library(tidyverse)
# manipular fechas
library(lubridate)
# para grupar gráficos
library(patchwork)
# animar gráficos
library(gganimate)
# Paletas de color
library(RColorBrewer)
# para animar gráficos
library(gganimate)
defunciones %>%
filter(edad_fal < 99, sexo != 9, ano_def %in% 2001:2019) %>%
ggplot(aes(x = edad_fal, col = ano_def, group = ano_def)) +
stat_ecdf() +
facet_wrap(~sexo)
defunciones %>%
filter(edad_fal < 99, sexo != "No declarado", ano_def %in% 2001:2019) %>%
ggplot(aes(x = edad_fal, col = ano_def, group = ano_def)) +
stat_ecdf() +
facet_wrap(~sexo)
defunciones %>%
filter(edad_fal < 99, sexo != "No declarado", ano_def %in% 2001:2019) %>%
ggplot(aes(x = edad_fal, col = ano_def, group = ano_def)) +
stat_ecdf(size = 1) +
facet_wrap(~sexo)
p2 <- defunciones %>%
filter(edad_fal < 99, sexo != "No declarado", ano_def %in% 2001:2019) %>%
ggplot(aes(x = edad_fal, col = ano_def, group = ano_def)) +
stat_ecdf(size = 1) +
facet_wrap(~sexo) +
scale_color_gradientn(colours = rainbow(10)) +
transition_time(ano_def) +
ease_aes('linear') +
shadow_mark(colour = "grey70") +
labs(
title = 'Año: {as.integer(frame_time)}',
color = "Año",
x = "Edad",
y ='')
animate(p2)
blogdown:::serve_site()
servr::daemon_stop(1)
